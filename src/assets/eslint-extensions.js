
// autogenerated by bin/eslint-extensions.ts
eslintExtensions = {
  "eslint:recommended": {
    "rules": {
      "constructor-super": "error",
      "for-direction": "error",
      "getter-return": "error",
      "no-async-promise-executor": "error",
      "no-case-declarations": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-condition": "error",
      "no-control-regex": "error",
      "no-debugger": "error",
      "no-delete-var": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-else-if": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-ex-assign": "error",
      "no-extra-boolean-cast": "error",
      "no-extra-semi": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-inner-declarations": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-misleading-character-class": "error",
      "no-mixed-spaces-and-tabs": "error",
      "no-new-symbol": "error",
      "no-obj-calls": "error",
      "no-octal": "error",
      "no-prototype-builtins": "error",
      "no-redeclare": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-this-before-super": "error",
      "no-undef": "error",
      "no-unexpected-multiline": "error",
      "no-unreachable": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unused-labels": "error",
      "no-unused-vars": "error",
      "no-useless-catch": "error",
      "no-useless-escape": "error",
      "no-with": "error",
      "require-yield": "error",
      "use-isnan": "error",
      "valid-typeof": "error"
    }
  },
  "plugin:jest/recommended": {
    "plugins": [
      "jest"
    ],
    "env": {
      "jest/globals": true
    },
    "rules": {
      "jest/expect-expect": "warn",
      "jest/no-commented-out-tests": "warn",
      "jest/no-disabled-tests": "warn",
      "jest/no-export": "error",
      "jest/no-focused-tests": "error",
      "jest/no-identical-title": "error",
      "jest/no-jest-import": "error",
      "jest/no-mocks-import": "error",
      "jest/no-jasmine-globals": "warn",
      "jest/no-standalone-expect": "error",
      "jest/no-test-callback": "error",
      "jest/no-test-prefixes": "error",
      "jest/no-try-expect": "error",
      "jest/valid-describe": "error",
      "jest/valid-expect": "error",
      "jest/valid-expect-in-promise": "error"
    }
  },
  "plugin:@typescript-eslint/eslint-recommended": {
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx"
        ],
        "rules": {
          "getter-return": "off",
          "no-dupe-args": "off",
          "no-dupe-keys": "off",
          "no-unreachable": "off",
          "valid-typeof": "off",
          "no-const-assign": "off",
          "no-new-symbol": "off",
          "no-this-before-super": "off",
          "no-undef": "off",
          "no-dupe-class-members": "off",
          "no-redeclare": "off"
        }
      }
    ]
  },
  "plugin:@typescript-eslint/recommended": {
    "extends": "./configs/base.json",
    "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/ban-ts-ignore": "error",
      "@typescript-eslint/ban-types": "error",
      "camelcase": "off",
      "@typescript-eslint/camelcase": "error",
      "@typescript-eslint/class-name-casing": "error",
      "@typescript-eslint/consistent-type-assertions": "error",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "@typescript-eslint/interface-name-prefix": "error",
      "@typescript-eslint/member-delimiter-style": "error",
      "no-array-constructor": "off",
      "@typescript-eslint/no-array-constructor": "error",
      "no-empty-function": "off",
      "@typescript-eslint/no-empty-function": "error",
      "@typescript-eslint/no-empty-interface": "error",
      "@typescript-eslint/no-explicit-any": "warn",
      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-namespace": "error",
      "@typescript-eslint/no-non-null-assertion": "warn",
      "@typescript-eslint/no-this-alias": "error",
      "no-unused-vars": "off",
      "@typescript-eslint/no-unused-vars": "warn",
      "no-use-before-define": "off",
      "@typescript-eslint/no-use-before-define": "error",
      "@typescript-eslint/no-var-requires": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",
      "@typescript-eslint/triple-slash-reference": "error",
      "@typescript-eslint/type-annotation-spacing": "error",
      "no-var": "error",
      "prefer-const": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error"
    }
  },
  "plugin:@typescript-eslint/recommended-requiring-type-checking": {
    "extends": "./configs/base.json",
    "rules": {
      "@typescript-eslint/await-thenable": "error",
      "@typescript-eslint/no-for-in-array": "error",
      "@typescript-eslint/no-misused-promises": "error",
      "@typescript-eslint/no-unnecessary-type-assertion": "error",
      "@typescript-eslint/prefer-includes": "error",
      "@typescript-eslint/prefer-regexp-exec": "error",
      "@typescript-eslint/prefer-string-starts-ends-with": "error",
      "require-await": "off",
      "@typescript-eslint/require-await": "error",
      "@typescript-eslint/unbound-method": "error",
      "no-var": "error",
      "prefer-const": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error"
    }
  }
}
